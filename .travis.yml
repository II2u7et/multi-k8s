# The Google Cloud SDK on Travis is pretty old (2014). So if
# you want to use an up-to-date version, you have to install
# your own. This config is the bare minimum you'll need to
# get an updated version of the SDK + kubectl.
services:
  - docker
env:
  global:
    - SHA=$(git rev-parse HEAD)
    - CLOUDSDK_CORE_DISABLE_PROMPTS=1
before_install:
  - openssl aes-256-cbc -K $encrypted_9f3b5599b056_key -iv $encrypted_9f3b5599b056_iv -in service-account.json.enc -out service-account.json -d
  - if [ ! -d $HOME/google-cloud-sdk/bin ]; then rm -rf $HOME/google-cloud-sdk; curl https://sdk.cloud.google.com | bash > /dev/null; fi
  # The install script errors if this directory already exists,
  # but Travis already creates it when we mark it as cached.
  # The install script is overly verbose, which sometimes causes
  # problems on Travis, so ignore stdout.
  # This line is critical. We setup the SDK to take precedence in our
  # environment over the old SDK that is already on the machine.
  - source $HOME/google-cloud-sdk/path.bash.inc
  - gcloud components update kubectl
  - gcloud auth activate-service-account --key-file service-account.json
  - gcloud config set project multi-k8s-299100
  - gcloud config set compute/zone australia-southeast1-b
  - gcloud container clusters get-credentials multi-cluster
  - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
  - docker build -t phhogphuc/react-test -f ./client/Dockerfile.dev ./client

script:
 - docker run -e CI=true phhogphuc/react-test npm test

deploy:
  provider: script
  script: bash ./deploy.sh 
  on:
    branch: master